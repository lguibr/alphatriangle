
[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "alphatriangle"
version = "1.6.0" # Incremented version for stats refactor
authors = [{ name="Luis Guilherme P. M.", email="lgpelin92@gmail.com" }]
description = "AlphaZero implementation for a triangle puzzle game (uses trianglengin v2+ and trimcts with tree reuse)." # Updated description
readme = "README.md"
license = { file="LICENSE" }
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Games/Entertainment :: Puzzle Games",
    "Development Status :: 4 - Beta",
]
dependencies = [
    # --- Core Dependencies ---
    "trianglengin>=2.0.6",
    "trimcts>=1.2.1",
    # --- RL/ML specific dependencies ---
    "numpy>=1.20.0",
    "torch>=2.0.0",
    "torchvision>=0.11.0",
    "cloudpickle>=2.0.0",
    "numba>=0.55.0",
    "mlflow>=1.20.0",
    "ray>=2.8.0",
    "pydantic>=2.0.0",
    "typing_extensions>=4.0.0",
    "typer[all]>=0.9.0",
    "tensorboard>=2.10.0",
]

[project.urls]
"Homepage" = "https://github.com/lguibr/alphatriangle"
"Bug Tracker" = "https://github.com/lguibr/alphatriangle/issues"

[project.scripts]
alphatriangle = "alphatriangle.cli:app"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=3.0.0",
    "pytest-mock>=3.0.0",
    "ruff",
    "mypy",
    "build",
    "twine",
    "codecov",
]

[tool.setuptools.packages.find]
# No 'where' needed, find searches from the project root by default

[tool.setuptools.package-data]
"*" = ["*.txt", "*.md", "*.json"]

# --- Tool Configurations ---
[tool.ruff]
line-length = 88
[tool.ruff.lint]
select = ["E", "W", "F", "I", "UP", "B", "C4", "ARG", "SIM", "TCH", "PTH", "NPY"]
ignore = ["E501"]
[tool.ruff.format]
quote-style = "double"
[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
# Add explicit Any disallowance if desired for stricter checking
# disallow_any_unimported = true
# disallow_any_expr = true
# disallow_any_decorated = true
# disallow_any_explicit = true
# disallow_any_generics = true
# disallow_subclassing_any = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=alphatriangle --cov-report=term-missing"
testpaths = ["tests"]
[tool.coverage.run]
omit = [
    "alphatriangle/cli.py",
    "alphatriangle/training/logging_utils.py",
    "alphatriangle/config/*",
    "alphatriangle/data/schemas.py",
    "alphatriangle/utils/types.py", # Old types removed
    "alphatriangle/rl/types.py",
    "alphatriangle/stats/types.py", # New types file
    "alphatriangle/stats/collector.py", # Keep omitted for now due to Ray complexity
    "alphatriangle/stats/processor.py", # Keep omitted for now
    "*/__init__.py",
    "*/README.md",
    "run_*.py",
    "alphatriangle/rl/self_play/mcts_helpers.py",
]
[tool.coverage.report]
fail_under = 60 # Keep threshold for now
show_missing = true
