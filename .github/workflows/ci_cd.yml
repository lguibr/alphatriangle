# File: .github/workflows/ci_cd.yml
name: AlphaTriangle CI/CD

on:
  push:
    branches: [ "main" ]
    tags: [ 'v*.*.*' ] # Trigger on version tags like v0.1.0
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: # Allow manual trigger

permissions:
  contents: read # Allow reading content for checkout

jobs:
  lint-type-check:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10' # Match .python-version

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ruff mypy
        pip install -r requirements.txt

    - name: Run Ruff Linter
      run: ruff check .

    - name: Run Ruff Formatter Check
      run: ruff format --check .

    - name: Run MyPy Type Checker
      run: mypy src tests

  test:
    name: Test & Coverage
    needs: lint-type-check # Run after linting/typing passes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11'] # Test on multiple supported versions

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Install from requirements.txt AND dev dependencies
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-mock codecov

    - name: Run Pytest with Coverage
      run: pytest --cov=src --cov-report=xml

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4.0.1
      with:
        token: ${{ secrets.CODECOV_TOKEN }} # Add CODECOV_TOKEN as a repository secret
        slug: lguibr/alphatriangle # CHANGE THIS to your repo slug
        files: ./coverage.xml
        fail_ci_if_error: true

  publish:
    name: Publish to PyPI
    needs: test # Run only after tests pass
    runs-on: ubuntu-latest
    # Only run this job if the trigger was a tag push starting with 'v'
    if: startsWith(github.ref, 'refs/tags/v')
    environment: # Optional: Define environment for secrets
      name: pypi
      url: https://pypi.org/p/alphatriangle # Link to PyPI page
    permissions:
      id-token: write # Required for trusted publishing

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install build dependencies
      run: python -m pip install --upgrade pip build twine

    - name: Build package
      run: python -m build

    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      # No API token needed if using trusted publishing
      # with:
      #   password: ${{ secrets.PYPI_API_TOKEN }} # Store your PyPI token as a secret